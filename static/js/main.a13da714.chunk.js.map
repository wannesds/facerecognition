{"version":3,"sources":["components/Logo/Logo.js","components/Navigation/Navigation.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/Signin/Signin.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","className","options","max","Navigation","route","onRouteChange","onClick","ImageLinkForm","onInputChange","onBtnSubmit","type","onChange","Rank","FaceRecognition","imageUrl","box","id","alt","src","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Signin","for","name","value","href","App","app","Clarifai","apiKey","useState","input","setInput","setImageUrl","setBox","setRoute","event","target","models","predict","FACE_DETECT_MODEL","then","response","console","log","displayFaceBox","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","bottom_row","left_col","top_row","right_col","calculateFaceLocation","catch","err","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a13da714.chunk.js","sourcesContent":["import React from 'react';\nimport './Logo.scss';\nimport Tilt from 'react-tilt';\n//import {ReactComponent as LogoSVG} from './LogoSVG.svg';\n\n\n const Logo = () => {\n     return(\n        <div className=\"logo-box\">\n            <Tilt className=\"tilt\" options={{ max : 25 }} >\n                <div className=\"tilt-inner\">\n                    {/* <LogoSVG className=\"logo-svg\"/> */}\n                </div>\n            </Tilt>\n        </div>\n     );\n }\n\n export default Logo;","import React from 'react';\nimport './Navigation.scss';\nimport Logo from '../Logo/Logo';\n\nconst Navigation = ({route, onRouteChange}) => {\n    return(\n        <nav>\n            <Logo/>\n            {\n                route === 'signin' ?\n                 false \n                    :\n                 <p onClick={() => onRouteChange('signin')}>Sign Out</p>\n            }\n        </nav>\n    );\n}\n\nexport default Navigation;","import React, { useState } from 'react';\nimport './ImageLinkForm.scss';\n\nfunction ImageLinkForm({ onInputChange, onBtnSubmit }) {\n    \n\n     return(\n        <div className=\"form-box\">\n            <p>\n                {'Detect faces in your pictures.'}\n            </p>\n            <div className=\"form-input\">\n                <input className='input-form' type='text' onChange={onInputChange}/>\n                <button onClick={onBtnSubmit}>Scan</button>\n            </div>\n        </div>\n     );\n }\n\n export default ImageLinkForm;","import React from 'react';\nimport './Rank.scss';\n\n\n const Rank = () => {\n     return(\n        <div className=\"rank-box\">\n            <div className=\"rank-text\">\n                {'Wannes, your current rank is...'}\n            </div>\n            <div className=\"rank-num\">\n                {'#5'}\n            </div>\n        </div>\n     );\n }\n\n export default Rank;","import React from 'react';\nimport './FaceRecognition.scss';\n\n\n const FaceRecognition = ({ imageUrl, box }) => {\n     return(\n        <div className=\"facerecognition-box\"> \n            {\n                !imageUrl ? <p>No picture scanned yet.</p> :\n                    <div className=\"image-box\">\n                        <img id='inputimage' alt=\"scanned photo\" src={imageUrl}/>\n                        <div className=\"bounding-box\" style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\n                    </div>\n            }  \n        </div>\n     );\n }\n\n export default FaceRecognition;","import React from 'react';\nimport './Signin.scss';\n\n\n const Signin = ({onRouteChange}) => {\n     return(\n        <div className=\"signin-box\">\n            <form>\n                <fieldset id=\"sign_up\">\n                    <legend>Sign In</legend>\n                    <label for=\"name\">Name</label>\n                    <input type=\"text\" name=\"name\"></input>\n                    <label for=\"email\">Email</label>\n                    <input type=\"email\" name=\"email\"></input>\n                    <label for=\"password\">Password</label>\n                    <input type=\"password\" name=\"password\"></input>\n                    <input className=\"button\" onClick={() => onRouteChange('home')} type=\"submit\" value=\"Sign in\"></input>\n                </fieldset>\n                <a href=\"#0\">Sign up</a>\n            </form>\n        </div>\n     );\n }\n\n export default Signin;","import React, { useState } from 'react';\nimport './App.scss';\n\nimport Clarifai from 'clarifai';\n\nimport Navigation from './components/Navigation/Navigation';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\n\nfunction App() {\n  const app = new Clarifai.App({\n      apiKey : 'c0b90294f2fa4311ab006f4d3930c7c8'\n    })\n\n  const [input, setInput] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [box, setBox] = useState({});\n  const [route, setRoute] = useState('signin');\n\n  const calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(data.outputs[0].data.regions[0].region_info.bounding_box.bottom_row);  \n\n    return {\n      leftCol: clarifaiFace.left_col * width ,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  const displayFaceBox = (box) => {\n    setBox(box);\n    console.log(box);\n  }\n\n  const onInputChange = (event) => {\n      setInput(event.target.value);\n  }\n\n  const onBtnSubmit = () => {\n    setImageUrl(input);\n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL, input)\n      .then(response => displayFaceBox(calculateFaceLocation(response)))\n      .catch(err => console.log(err));\n     \n  }\n\n  const onRouteChange = (route) => {\n    setRoute(route);\n  }\n  \n  return (\n    <div className=\"App\">\n      <Navigation route={route} onRouteChange={onRouteChange}/>\n      {\n        route === 'signin' ?\n          <Signin onRouteChange={onRouteChange}/> \n            :\n          <section>\n            <Rank/>\n            <ImageLinkForm onInputChange={onInputChange} onBtnSubmit={onBtnSubmit}/>\n            <FaceRecognition box={box} imageUrl={imageUrl}/>\n          </section>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './components/Vars.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
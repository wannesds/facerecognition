{"version":3,"sources":["components/Logo/Logo.js","components/Navigation/Navigation.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","className","options","max","Navigation","ImageLinkForm","onInputChange","onBtnSubmit","type","onChange","onClick","Rank","FaceRecognition","imageUrl","id","alt","src","App","app","Clarifai","apiKey","useState","input","setInput","setImageUrl","event","target","value","models","predict","FACE_DETECT_MODEL","then","response","data","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","width","height","calculateFaceLocation","catch","err","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"qZAkBgBA,EAZF,WACT,OACG,qBAAKC,UAAU,WAAf,SACI,cAAC,IAAD,CAAMA,UAAU,OAAOC,QAAS,CAAEC,IAAM,IAAxC,SACI,qBAAKF,UAAU,oBCGhBG,EATI,WACf,OACI,gCACI,cAAC,EAAD,IACA,6C,MCWIC,MAhBhB,YAAwD,IAA/BC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,YAGnC,OACG,sBAAKN,UAAU,WAAf,UACI,4BACK,mCAEL,sBAAKA,UAAU,aAAf,UACI,uBAAOO,KAAK,OAAOC,SAAUH,IAC7B,wBAAQI,QAASH,EAAjB,yBCIAI,G,MAbF,WACT,OACG,sBAAKV,UAAU,WAAf,UACI,qBAAKA,UAAU,YAAf,SACK,oCAEL,qBAAKA,UAAU,WAAf,SACK,YCODW,G,MAdS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OACG,qBAAKZ,UAAU,sBAAf,SAEQY,EACI,qBAAKC,GAAG,aAAaC,IAAI,kBAAkBC,IAAKH,IAEhD,yDCmCLI,MAtCf,WACE,IAAMC,EAAM,IAAIC,IAASF,IAAI,CACzBG,OAAS,qCAFA,EAKaC,mBAAS,IALtB,mBAKNC,EALM,KAKCC,EALD,OAMmBF,mBAAS,IAN5B,mBAMNR,EANM,KAMIW,EANJ,OAOSH,mBAAS,IAPlB,mBA4Bb,OA5Ba,UA6BX,sBAAKpB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAeK,cAhBG,SAACmB,GACnBF,EAASE,EAAMC,OAAOC,QAeuBpB,YAZ7B,WAClBiB,EAAYF,GACZJ,EAAIU,OACDC,QAAQV,IAASW,kBAAmBR,GACpCS,MAAK,SAAAC,GAAQ,OAfY,SAACC,GACRA,EAAKD,SAASE,QAAQ,GAAGD,KAAKE,QAAQ,GAAGC,YAAYC,aAA1E,IACMC,EAAQC,SAASC,eAAe,cACxBC,OAAOH,EAAMI,OACZD,OAAOH,EAAMK,QAWRC,CAAsBZ,MACvCa,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,SAQ1B,cAAC,EAAD,CAAiBjC,SAAUA,QC7BlBoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASC,eAAe,SAM1BS,M","file":"static/js/main.46051798.chunk.js","sourcesContent":["import React from 'react';\nimport './Logo.scss';\nimport Tilt from 'react-tilt';\n//import {ReactComponent as LogoSVG} from './LogoSVG.svg';\n\n\n const Logo = () => {\n     return(\n        <div className=\"logo-box\">\n            <Tilt className=\"tilt\" options={{ max : 25 }} >\n                <div className=\"tilt-inner\">\n                    {/* <LogoSVG className=\"logo-svg\"/> */}\n                </div>\n            </Tilt>\n        </div>\n     );\n }\n\n export default Logo;","import React from 'react';\nimport './Navigation.scss';\nimport Logo from '../Logo/Logo';\n\nconst Navigation = () => {\n    return(\n        <nav>\n            <Logo/>\n            <p>Sign Out</p>\n        </nav>\n    );\n}\n\nexport default Navigation;","import React, { useState } from 'react';\nimport './ImageLinkForm.scss';\n\nfunction ImageLinkForm({ onInputChange, onBtnSubmit }) {\n    \n\n     return(\n        <div className=\"form-box\">\n            <p>\n                {'Detect faces in your pictures.'}\n            </p>\n            <div className=\"form-input\">\n                <input type='text' onChange={onInputChange}/>\n                <button onClick={onBtnSubmit}>Scan</button>\n            </div>\n        </div>\n     );\n }\n\n export default ImageLinkForm;","import React from 'react';\nimport './Rank.scss';\n\n\n const Rank = () => {\n     return(\n        <div className=\"rank-box\">\n            <div className=\"rank-text\">\n                {'Wannes, your current rank is...'}\n            </div>\n            <div className=\"rank-num\">\n                {'#5'}\n            </div>\n        </div>\n     );\n }\n\n export default Rank;","import React from 'react';\nimport './FaceRecognition.scss';\n\n\n const FaceRecognition = ({ imageUrl }) => {\n     return(\n        <div className=\"facerecognition-box\">\n            {\n                imageUrl ? \n                    <img id='inputimage' alt=\"scanned picture\" src={imageUrl}/>\n                :\n                    <p>No image scanned yet</p>\n            }\n            \n        </div>\n     );\n }\n\n export default FaceRecognition;","import React, { useState } from 'react';\nimport './App.scss';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\n\nfunction App() {\n  const app = new Clarifai.App({\n      apiKey : 'c0b90294f2fa4311ab006f4d3930c7c8'\n    })\n\n  const [input, setInput] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [box, setBox] = useState({});\n\n  const calculateFaceLocation = (data) => {\n    const clarifaiFace = data.response.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n  }\n\n  const onInputChange = (event) => {\n      setInput(event.target.value);\n  }\n\n  const onBtnSubmit = () => {\n    setImageUrl(input);\n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL, input)\n      .then(response => calculateFaceLocation(response))\n      .catch(err => console.log(err));\n  }\n  \n  return (\n    <div className=\"App\">\n      <Navigation/>\n      <Rank/>\n      <ImageLinkForm onInputChange={onInputChange} onBtnSubmit={onBtnSubmit}/>\n      <FaceRecognition imageUrl={imageUrl}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './components/Vars.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}